package graph;

import java.util.HashMap;

/*
Disjoint Set is a Data Structure which is used to perform three operations:
1. Make Set
2. Find Set
3. Merge Set

This Data Structure is used in Kruskal's Algorithm
*/

public class disjointSetDataStructure {
	static HashMap<Long, Node> map = new HashMap<>();
	
	static class Node {
		long data;
		Node parent;
		int rank;
	}
	
	public static void makeSet(long data) {
		Node node = new Node();
		node.data = data;
		node.parent = node;
		node.rank=0;
		map.put(data, node);
	}
	
	public static void union(long data1, long data2) {
		Node node1 = map.get(data1);
		Node node2 = map.get(data2);
		
		Node parent1 = findSet(node1);
		Node parent2 = findSet(node2);
		
		if(parent1.data == parent2.data) {
			return;
		}
		
		if(parent1.rank >= parent2.rank) {
			parent1.rank = (parent1.rank==parent2.rank)?parent1.rank+1:parent1.rank;
			
			
		}
		else {
			parent1.parent = parent2;
		}
	}
	
	public static void main(String[] args) {
		

	}
}
