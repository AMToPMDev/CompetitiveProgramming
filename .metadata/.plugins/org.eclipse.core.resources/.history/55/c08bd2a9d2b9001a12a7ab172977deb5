/*
Reverse a given linked list without using any extra memory.
  
*/

public class LinkedList {
	Node head;
	
	static class Node{
		int data;
		Node next;
		
		Node(int d){
			data = d;
		}
	}
	
	public static LinkedList insert(LinkedList list, int data) {
		Node new_node = new Node(data);
		
		if(list.head == null) {
			list.head = new_node;
		}
		else {
			Node temp = list.head;
			
			while(temp.next != null) {
				temp = temp.next;
			}
			
			temp.next = new_node;
		}
		
		return list;
	}
	
	public static void printList(LinkedList list) {
		Node current_node = list.head;
		
		while(current_node != null) {
			System.out.print(current_node.data + ", ");
			current_node = current_node.next;
		}
	}
	
	public static LinkedList reverseList(LinkedList list) {
		
		return list;
	}
	
	public static void main(String[] args) {
		LinkedList list = new LinkedList();
		
		list = insert(list, 1);
		list = insert(list, 2);
		list = insert(list, 3);
		list = insert(list, 4);

	}

}
